using System;
using System.IO;
using System.Text;

namespace XorCoder
{
    public class Program
    {
        public static void Main(string[] args)
        {
            // Check if a file path is provided
            if (args.Length == 0)
            {
                Console.WriteLine("Usage: XorCoder <file path> [-VBA]");
                return;
            }

            string filePath = args[0];
            byte[] buf;

            try
            {
                // Read the file into a byte array
                buf = File.ReadAllBytes(filePath);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error reading file: {ex.Message}");
                return;
            }

            // Encode the payload with XOR (fixed key)
            byte[] encoded = new byte[buf.Length];
            for (int i = 0; i < buf.Length; i++)
            {
                encoded[i] = (byte)(buf[i] ^ 0xfa);
            }

            StringBuilder hex;

            // Check if "-VBA" argument is provided
            if (args.Length > 1 && args[1].Equals("-VBA", StringComparison.OrdinalIgnoreCase))
            {
                // Printout VBA payload
                uint counter = 0;
                hex = new StringBuilder(encoded.Length * 2);
                foreach (byte b in encoded)
                {
                    hex.AppendFormat("{0:D3}, ", b);
                    counter++;
                    if (counter % 25 == 0)
                    {
                        hex.Append("_\n");
                    }
                }
                Console.WriteLine($"XORed VBA payload (key: 0xfa):");
                Console.WriteLine(hex.ToString());
            }
            else
            {
                // Printout C# payload
                hex = new StringBuilder(encoded.Length * 2);
                int totalCount = encoded.Length;
                for (int count = 0; count < totalCount; count++)
                {
                    byte b = encoded[count];

                    if ((count + 1) == totalCount) // Don't append comma for last item
                    {
                        hex.AppendFormat("0x{0:x2}", b);
                    }
                    else
                    {
                        hex.AppendFormat("0x{0:x2}, ", b);
                    }

                    if ((count + 1) % 15 == 0)
                    {
                        hex.Append("\n");
                    }
                }

                Console.WriteLine($"XORed C# payload (key: 0xfa):");
                Console.WriteLine($"byte[] buf = new byte[{buf.Length}] {{\n{hex}\n}};");
            }
        }
    }
}
