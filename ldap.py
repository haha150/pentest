import ldap3

def ldap_authenticate(username, password, ldap_server, ldap_base_dn):
    try:
        server = ldap3.Server(ldap_server, get_info=ldap3.ALL)
        conn = ldap3.Connection(server, user=f"cn={username},{ldap_base_dn}", password=password)
        if not conn.bind():
            raise Exception("Authentication failed. Invalid username or password.")
        return True
    except Exception as e:
        print(f"Error during LDAP authentication: {e}")
        return False
    
def list_all_users(ldap_server, ldap_base_dn):
    try:
        server = ldap3.Server(ldap_server, get_info=ldap3.ALL)
        conn = ldap3.Connection(server)
        if not conn.bind():
            raise Exception("Failed to bind to the LDAP server.")
        search_filter = "(objectClass=user)"
        conn.search(ldap_base_dn, search_filter, ldap3.SUBTREE)
        users = []
        for entry in conn.entries:
            users.append(entry.entry_dn)
        return users
    except Exception as e:
        print(f"Error while listing users from LDAP: {e}")
        return []
    
def authenticate(ldap_server, ldap_base_dn):
    username = "your_username"
    password = "your_password"

    if ldap_authenticate(username, password, ldap_server, ldap_base_dn):
        print("Authentication successful!")
    else:
        print("Authentication failed.")

def get_users(ldap_server, ldap_base_dn):
    all_users = list_all_users(ldap_server, ldap_base_dn)
    if all_users:
        print("All users:")
        for user in all_users:
            print(user)
    else:
        print("No users found.")

def lock_all_users(ldap_server, ldap_base_dn):
    users = []
    for i in users:
        for i in range(0, 6):
            ldap_authenticate(i, 'password', ldap_server, ldap_base_dn)

if __name__ == "__main__":
    ldap_server = "ldap://your_ldap_server:389"
    ldap_base_dn = "dc=example,dc=com"
    authenticate(ldap_server, ldap_base_dn)
    get_users(ldap_server, ldap_base_dn)
    